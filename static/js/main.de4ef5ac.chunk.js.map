{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Home.jsx","components/Contact.jsx","redux/actions/index.js","redux/constants/index.js","components/Loader.jsx","components/ProductDetails.jsx","components/ProductList.jsx","components/CartItem.jsx","components/Cart.jsx","components/CartProject.jsx","components/BodyContent.jsx","App.js","serviceWorker.js","redux/reducers/photoReducer.js","redux/reducers/cartReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["connectedHeader","connect","state","cartItems","cartReducer","props","className","exact","to","onClick","windowWidth","document","documentElement","clientWidth","cartBounds","getElementById","getBoundingClientRect","window","scrollTo","top","cartStatusClickHandler","length","Footer","Date","getFullYear","Home","Contact","alt","href","fetchProductsBegin","type","fetchProductsSuccess","products","payload","fetchProductsFailure","error","Loader","connectedProductDetails","dispatch","addToCart","selectedProduct","src","product","thumbnailUrl","title","substring","console","log","itemFound","find","item","id","alert","addToCartHandler","connectedProductList","photos","photoReducer","loading","getPhotosByThunkAxios","axios","get","then","response","data","splice","catch","err","useEffect","map","p","key","connectedCartItem","removeItem","connectedCart","CartProject","BodyContent","path","component","App","React","Component","Boolean","location","hostname","match","initialState","action","items","Object","assign","concat","filter","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de4ef5ac.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nimport {connect} from 'react-redux';\nconst Header = (props) => {\n    const cartStatusClickHandler = () => {\n        let windowWidth = document.documentElement.clientWidth;\n        var cartContainer = document.getElementById('cart');\n        var cartBounds = cartContainer.getBoundingClientRect();\n        if(windowWidth < 600){\n            window.scrollTo(0, (cartBounds.top) ? cartBounds.top : 0);\n        }\n    }\n\n    return (<div className=\"header\">\n        <div className=\"menuBar\">\n            <ul className=\"navMenu\">\n                <li><NavLink exact to=\"/\">Home</NavLink></li>\n                <li><NavLink to=\"/cartProject\">Project</NavLink></li>\n                <li><NavLink to=\"/docs\">Docs</NavLink></li>\n            </ul>\n        </div>\n        <div className=\"statusSection\">\n            <span className=\"cartStatus\" onClick={() => cartStatusClickHandler()}>{props.cartItems.length + \" : Items\"}</span>\n        </div>\n    </div>)\n}\nconst mapStateToProps = (state) => {\n    return {\n        cartItems : state.cartReducer.cartItems\n    }\n}\n\nconst connectedHeader = connect(mapStateToProps)(Header);\nexport default connectedHeader;","import React from 'react';\nconst Footer = () => {\n    return(<div className=\"footer\">\n        <p>A Project on React  <span>&#169; {new Date().getFullYear()}</span></p>\n    </div>)\n}\n\nexport default Footer;","import React from 'react';\n\nconst Home = (props) => {\n    return(<div className=\"home\">\n           <p className=\"text2\">REACT APP</p>\n           <div className=\"homeDesc\">\n            <p>A project built on ReactJS.</p>\n            <p>This project explores REDUX, REACT-THUNK and AXIOS </p>\n            <p>Shopping Cart App is for demo pusrpose only</p>\n           </div>\n        </div>)\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Contact = (props) => {\n    return (<div className=\"documentation\">\n        <div className=\"documentHeader\">About Project</div>\n        <div className=\"topicRow\">\n            <div className=\"topicLabel\">\n                Tools & Technologies\n            </div>\n            <div className=\"topicDesc\">\n                <p>ReactJS</p>\n                <p>Redux, React-Redux, Redux-Thunk, Axios, gh-pages</p>\n                <p>HTML, CSS, SASS</p>\n                <p>Jest and Enzyme</p>\n            </div>\n        </div>\n        <div className=\"topicRow\">\n            <div className=\"topicLabel\">\n                React App\n            </div>\n            <div className=\"topicDesc\">\n                <p>SPA(Single Page Application) with React-router</p>\n                <p>3 Views - Home, Project and Docs</p>\n                <p>Project - ShoppingCart App</p>\n            </div>\n        </div>\n        <div className=\"topicRow\">\n            <div className=\"topicLabel\">\n                API \n            </div>\n            <div className=\"topicDesc\">\n                <a alt=\"jsonLink\" href=\"https://jsonplaceholder.typicode.com\">JSOMPlaceHolder</a>\n                <p>https://jsonplaceholder.typicode.com/</p>\n            </div>\n        </div>\n        <div className=\"topicRow\">\n            <div className=\"topicLabel\">\n                <p>Photos API </p>\n            </div>\n            <div className=\"topicDesc\">\n            <a alt=\"jsonLink\" href=\"https://jsonplaceholder.typicode.com/photos\">PHOTOS</a>\n            <p>https://jsonplaceholder.typicode.com/photos</p>\n            </div>\n        </div>\n        <div className=\"topicRow\">\n            <div className=\"topicLabel\">\n                <p>Repository </p>\n            </div>\n            <div className=\"topicDesc\">\n            <a alt=\"git\" href=\"https://github.com\">GITHUB</a>\n            <p>https://github.com</p>\n            </div>\n        </div>\n        <div className=\"topicRow\">\n            <div className=\"topicLabel\">\n                <p>Live Demo</p>\n            </div>\n            <div className=\"topicDesc\">\n            <a alt=\"git\" href=\"https://sijujacobs.github.io/impetusproject/\">Demo</a>\n            <p>https://sijujacobs.github.io/impetusproject/</p>\n            </div>\n        </div>\n        <div className=\"topicRow\">\n            <div className=\"topicLabel\">\n                <p>Source Code </p>\n            </div>\n            <div className=\"topicDesc\">\n            <a alt=\"git\" href=\"https://github.com/sijujacobs/impetusproject\">Project</a>\n            <p>https://github.com/sijujacobs/impetusproject</p>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default Contact;","import {\n  GET_PHOTOS,\n  ADD_TO_CART,\n  REMOVE_ITEM,\n  FETCH_PRODUCTS_BEGIN,\n  FETCH_PRODUCTS_SUCCESS,\n  FETCH_PRODUCTS_FAILURE\n} from \"../constants/index\";\nimport axios from \"axios\";\n\nexport const getPhotos = () => {\n  let pList = [\n    {\n      albumId: 1,\n      id: 1,\n      title: \"accusamus beatae ad facilis cum similique qui sunt\",\n      url: \"https://via.placeholder.com/600/92c952\",\n      thumbnailUrl: \"https://via.placeholder.com/150/92c952\"\n    },\n    {\n      albumId: 1,\n      id: 2,\n      title: \"reprehenderit est deserunt velit ipsam\",\n      url: \"https://via.placeholder.com/600/771796\",\n      thumbnailUrl: \"https://via.placeholder.com/150/771796\"\n    },\n    {\n      albumId: 1,\n      id: 3,\n      title: \"osijufficia porro iure quia iusto qui ipsa ut modi\",\n      url: \"https://via.placeholder.com/600/24f355\",\n      thumbnailUrl: \"https://via.placeholder.com/150/24f355\"\n    }\n  ];\n  return {\n    type: GET_PHOTOS,\n    payload: pList\n  };\n};\n\nexport const getPhotosByThunkAxios = () => {\n  return dispatch => {\n    dispatch(fetchProductsBegin());\n    return (\n      axios\n        .get(\"https://jsonplaceholder.typicode.com/photos\")\n        // .then(response => {dispatch(fetchDataFormReslt(response.data))})\n        .then(response =>\n          // dispatch({ type: \"GET_PHOTOS\", payload: response.data.splice(4900) })\n          dispatch(fetchProductsSuccess(response.data.splice(4900)))\n        )\n        .catch(err => {\n          console.log(\"getPhotosByThunkAxios :: ERROR : \", err);\n          dispatch(fetchProductsFailure(err));\n        })\n    );\n  };\n};\n\n// const fetchDataFormReslt = (data) => {\n//   return{\n//     type : GET_PHOTOS,\n//     payload : data\n//   }\n// }\n\nexport const addToCart = selectedItem => {\n  return {\n    type: ADD_TO_CART,\n    payload: selectedItem\n  };\n};\n\nexport const removeItem = selectedItem => {\n  return {\n    type: REMOVE_ITEM,\n    payload: selectedItem\n  };\n};\n\n//-----------\nexport const fetchProductsBegin = () => ({\n  type: FETCH_PRODUCTS_BEGIN\n});\n\nexport const fetchProductsSuccess = products => ({\n  // dispatch({ type: \"GET_PHOTOS\", payload: response.data.splice(4900) })\n  type: FETCH_PRODUCTS_SUCCESS,\n  payload: { products }\n});\n\nexport const fetchProductsFailure = error => ({\n  type: FETCH_PRODUCTS_FAILURE,\n  payload: { error }\n});\n","export const GET_PHOTOS = \"GET_PHOTOS\";\nexport const GET_CART_ITEMS = \"GET_CART_ITEMS\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\n\nexport const FETCH_PRODUCTS_BEGIN = \"FETCH_PRODUCTS_BEGIN\";\nexport const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\nexport const FETCH_PRODUCTS_FAILURE = \"FETCH_PRODUCTS_FAILURE\";\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loaderWrapper\">\n      <div className=\"loader\"></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart } from \"../redux/actions/index\";\n\nconst ProductDetails = props => {\n  const addToCartHandler = selectedProduct => {\n    console.log(\" addToCartHandler :: props.cartItems : \", props.cartItems);\n\n    let itemFound = props.cartItems.find(function(item) {\n      return item.id === selectedProduct.id;\n    });\n    if (itemFound && itemFound.id > 0) {\n      alert(\"Item already added to Cart\");\n    } else {\n      props.addToCart(props.product);\n    }\n  };\n\n  return (\n    <div className=\"productDetails\">\n      <div className=\"productImage\">\n        <img alt=\"productImage\" src={props.product.thumbnailUrl} />\n      </div>\n      <div className=\"productDesc\">{props.product.title.substring(0, 10)}</div>\n      <div className=\"buttonSection\">\n        <button\n          className=\"button\"\n          onClick={() => addToCartHandler(props.product)}\n        >\n          Add to Cart\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: selectedProduct => dispatch(addToCart(selectedProduct))\n  };\n};\n\nconst connectedProductDetails = connect(\n  null,\n  mapDispatchToProps\n)(ProductDetails);\nexport default connectedProductDetails;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPhotosByThunkAxios } from \"../redux/actions/index\";\nimport Loader from \"../components/Loader\";\n\nimport ProductDetails from \"./ProductDetails\";\n\nconst ProductList = props => {\n  const { loading, photos, getPhotosByThunkAxios } = props;\n\n  useEffect(() => {\n    getPhotosByThunkAxios();\n  }, [getPhotosByThunkAxios]);\n\n  let renderElement = <div>Test</div>;\n\n  if (loading) {\n    renderElement = <Loader />;\n  } else {\n    renderElement = (\n      <div className=\"productList\">\n        <div className=\"sectionHeader\">Product List</div>\n        {photos &&\n          photos.length > 0 &&\n          photos.map(p => (\n            <ProductDetails\n              key={p.id}\n              product={p}\n              cartItems={props.cartItems}\n            />\n          ))}\n      </div>\n    );\n  }\n  return renderElement;\n  // return (\n  //   <div className=\"productList\">\n  //     <div className=\"sectionHeader\">Product List</div>\n  //     {photos &&\n  //       photos.length > 0 &&\n  //       photos.map(p => (\n  //         <ProductDetails key={p.id} product={p} cartItems={props.cartItems} />\n  //       ))}\n  //   </div>\n  // );\n};\n\nconst mapStateToProps = state => {\n  return {\n    photos: state.photoReducer.photos,\n    loading: state.photoReducer.loading,\n    cartItems: state.cartReducer.cartItems\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPhotosByThunkAxios: () => dispatch(getPhotosByThunkAxios())\n  };\n};\n\nconst connectedProductList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProductList);\nexport default connectedProductList;\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { removeItem } from '../redux/actions/index';\n\nconst CartItem = (props) => {\n    const removeItemHandler = (selectedProduct) => {\n        props.removeItem(selectedProduct);\n    }\n    return (<div className=\"cartItem fadeItem\">\n                <div className=\"itemImage\">\n                    <img alt=\"itemImage\" src={props.item.thumbnailUrl} />\n                </div>\n                <div className=\"itemDesc\">\n                    {props.item.title.substring(0, 10)}\n                </div>\n                <div className=\"buttonSection\">\n                    <button className=\"button\" onClick={() => removeItemHandler(props.item)}>Remove</button>\n                </div>\n            </div>)\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        removeItem: (selectedProduct) => dispatch(removeItem(selectedProduct))\n    }\n}\n\nconst connectedCartItem = connect(null, mapDispatchToProps)(CartItem);\nexport default connectedCartItem;\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = props => {\n  return (\n    <div id=\"cart\" className=\"cart\">\n      <div className=\"sectionHeader\">Cart Items</div>\n      \n      {props.cartItems &&\n        props.cartItems.length > 0 &&\n        props.cartItems.map(p => <CartItem key={p.id} item={p} />)}\n    </div>\n  );\n};\n\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartReducer.cartItems\n  };\n};\n\nconst connectedCart = connect(mapStateToProps)(Cart);\nexport default connectedCart;\n","import React from \"react\";\nimport ProductList from \"./ProductList\";\nimport Cart from \"./Cart\";\n\nconst CartProject = props => {\n  return (\n    <div className=\"projectContainer\">\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default CartProject;\n","import React from 'react';\n\nimport Home from './Home';\nimport Contact from './Contact';\nimport CartProject from './CartProject';\n\nimport { Route } from \"react-router-dom\";\nconst BodyContent = () => {\n    return (<div className=\"bodyContent\">\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/cartProject\" component={CartProject} />\n        <Route path=\"/docs\" component={Contact} />\n    </div>)\n}\n\nexport default BodyContent;","import React from \"react\";\n// import { connect } from \"react-redux\";\n\n// import { getPhotosByThunkAxios } from \"./redux/actions/index\";\nimport { HashRouter } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport BodyContent from \"./components/BodyContent\";\n\nimport \"./css/style.css\";\nclass App extends React.Component {\n  componentDidMount() {\n    // this.props.getPhotos();\n    // this.props.getPhotosByThunkAxios();\n  }\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"appContainer\">\n          <Header />\n          <BodyContent />\n          <Footer />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     getPhotosByThunkAxios: () => dispatch(getPhotosByThunkAxios())\n//   };\n// };\n\n// const connectedApp = connect(null, mapDispatchToProps)(App);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  GET_PHOTOS,\n  FETCH_PRODUCTS_BEGIN,\n  FETCH_PRODUCTS_SUCCESS,\n  FETCH_PRODUCTS_FAILURE\n} from \"../constants/index\";\n\nconst initialState = {\n  photos: [],\n  loading: false\n};\nconst photoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_PRODUCTS_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_PRODUCTS_SUCCESS:\n      return {\n        ...state,\n        loading: true\n        // photos: action.payload.products\n      };\n    case FETCH_PRODUCTS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        items: []\n      };\n\n    case GET_PHOTOS:\n      return {\n        photos: action.payload\n      };\n    default: {\n      return state;\n    }\n  }\n  // if(action.type === GET_PHOTOS){\n  //     return Object.assign({}, state, {photos : state.photos.concat(action.payload)});\n  // }\n  // return state;\n};\n\nexport default photoReducer;\n","import { GET_CART_ITEMS, ADD_TO_CART, REMOVE_ITEM } from \"../constants/index\";\n\nconst initialState = {\n  cartItems: []\n};\nconst cartReducer = (state = initialState, action) => {\n  // console.log(' cartReducer :: AddToCart : state - ', state, ', action - ', action);\n\n  switch (action.type) {\n    case GET_CART_ITEMS:\n      return Object.assign({}, state, {\n        cartItems: state.cartItems.concat(action.payload)\n      });\n    case ADD_TO_CART:\n      return Object.assign({}, state, {\n        cartItems: state.cartItems.concat(action.payload)\n      });\n    case REMOVE_ITEM:\n      return Object.assign({}, state, {\n        cartItems: state.cartItems.filter(item => action.payload.id !== item.id)\n      });\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import {combineReducers} from 'redux';\nimport photoReducer from './photoReducer';\nimport cartReducer from './cartReducer';\n\n\nconst rootReducer = combineReducers({\n    photoReducer,\n    cartReducer\n});\n\nexport default rootReducer;\n\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers/index';\n// import photoReducer from '../reducers/photoReducer';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store/index';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}